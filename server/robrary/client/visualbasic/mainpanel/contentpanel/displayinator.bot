@robot "displayinator",
  description: "Message window."
  local: true

@intercept 'distributeUp', (msg, source, distributeUp) ->
  distributeUp msg, source unless msg.type in ['display message', 'build message']

range = document.createRange()
frag = (html) ->
  f = range.createContextualFragment(html)
  if f.childElementCount is 1 then f.firstElementChild else f

container = frag """
  <div id='message-container'>
    <div id='messages'></div>
  </div>
"""

@element = container

messages = container.querySelector('#messages')

container.style[k] = v for k, v of {
  'overflow-y': 'scroll'
  width: '100%'
}

messages.style.display = 'table'

@transmit "add style", "
  .message {
    display: table-row;
  }
"

getParentMessage = (el) ->
  console.log "checking", el
  if !el or el is document.body
    null
  else if el.classList.contains 'message'
    el
  else
    getParentMessage el.parentNode

messages.addEventListener 'click', (ev) =>
  # console.log "ev", ev
  # console.log "path", ev.path
  # console.log "target", ev.target
  # console.log "currentTarget", ev.currentTarget
  return if window.getSelection?()?.isCollapsed is false

  #message = ev.
  # return unless ev.target.querySelector('.source')

  message = getParentMessage ev.target
  return unless message
  #$(ev.currentTarget).parents('.message')
  id = message.id
  from = message.getAttribute 'data-from'

  if id
    id = id.replace /^msg-/, ''
    source = message.querySelector('.source').textContent
    console.log "source el", message.querySelector('.source').textContent
    @transmit 'message clicked', {id, source, from}
  else
    @transmit 'message clicked', {}
  ev.stopPropagation()

container.addEventListener 'click', (ev) =>
 @transmit 'message clicked', {} unless window.getSelection?()?.isCollapsed is false

@listen "display message", ({user, data: {message, id, re, from}}) ->
  scroll = (container.scrollTop + container.offsetHeight >= container.scrollHeight - 1)

  id = if id then "msg-#{id}" else ""
  re = if re then "msg-#{re}" else ""

  html = frag """
    <div id='#{id}' class='message'>#{message}</div>
  """
  html.setAttribute 'data-from', from

  jqescape = (x) -> x.replace(/([ #;&,.+*~\':"!^$[\]()=>|\/@])/g,'\\$1')
  sel = "##{jqescape re}, ##{jqescape re} ~ [data-re=\"#{jqescape re}\"]"

  if re and (reEl = $(sel).last()) and reEl.length
    html.setAttribute 'data-re', re
    html.classList.add 're'
    reEl.after html
  else
    messages.appendChild html

  container.scrollTop = container.scrollHeight if scroll
